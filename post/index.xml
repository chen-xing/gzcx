<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 主人翁</title><link>https://www.gzcx.net/post/</link><description>Recent content in Posts on 主人翁</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 20 Mar 2022 21:55:00 +0800</lastBuildDate><atom:link href="https://www.gzcx.net/post/index.xml" rel="self" type="application/rss+xml"/><item><title>linux常用知识</title><link>https://www.gzcx.net/linux-base-command.html</link><pubDate>Sun, 20 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/linux-base-command.html</guid><description>1、网络抓包 fconfig查看网卡 ip host tcpdump -i eth1 host hostname and port 80 -w /tmp/data.pcap 开源软件RawCap也可以抓到(下载地址:http://www.netresec.com/?page=</description></item><item><title>GC调优参数</title><link>https://www.gzcx.net/GC-tuning-parameters.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/GC-tuning-parameters.html</guid><description>原文地址： https://juejin.im/post/5c94a123f265da610916081f。 JVM 配置常用参数 堆参数； 回收器参数； 项目中常用配置； 常用</description></item><item><title>idea jvm调优</title><link>https://www.gzcx.net/1870.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/1870.html</guid><description>1、背景 idea作为一个高频使用的java IDE。性能的好坏,影响着开发的心情。工欲善其事必先利其器。 2、优化后的参数 优化后的感觉是拙匠常怪工具差。明明可以流畅</description></item><item><title>IDEA中全项目文本查找快捷键（ctr+shift+F）无效解决办法</title><link>https://www.gzcx.net/Invalid-solution-to-the-shortcut-key-(ctr+shift+F)-for-all-project-text-search-in-IDEA.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/Invalid-solution-to-the-shortcut-key-(ctr+shift+F)-for-all-project-text-search-in-IDEA.html</guid><description>1、可能的问题 IDEA的快捷键被修改了 与系统中的其他软件的快捷键冲突了 2、解决办法 搜狗输入法修改简体与繁体的快捷键（90%是这个原因） 不行的话，重启下电脑，首先</description></item><item><title>idea代码模板如何设置</title><link>https://www.gzcx.net/1867.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/1867.html</guid><description>1、模板分类 File and Code template 文件级别的模板 Live template 方法或代码块级别的模板 2、File and Code template /** * @description TODO * @date ${YEAR}-${MONTH}-${DAY} ${TIME} * @author chen xing */ 其中${DATE}的样式是 2021/07/28,这里使用</description></item><item><title>idea快捷键</title><link>https://www.gzcx.net/idea-shortcuts.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/idea-shortcuts.html</guid><description>Ctrl 快捷键 介绍 Ctrl + F 在当前文件进行文本查找 （必备） Ctrl + R 在当前文件进行文本替换 （必备） Ctrl + Z 撤销 （必备） Ctrl + Y 删除光标所在行 或 删除选中的行 （必备） Ctrl + X 剪切光标所</description></item><item><title>java内存优化的常见方法</title><link>https://www.gzcx.net/java-memory-optimization.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/java-memory-optimization.html</guid><description>1、慎用new new就意味着会分配对应的内存空间。利用jdk本身的变量 错误 建议 new Boolean(true) Boolean.TRUE new Integer() Integer.valueOf(int i) 2、String操作 用StringBuffer替换+操作 3、容易忽略</description></item><item><title>Java线上故障排查技巧</title><link>https://www.gzcx.net/Java-Online-Troubleshooting-Tips.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/Java-Online-Troubleshooting-Tips.html</guid><description>1、分类 线上故障主要会包括 CPU、磁盘、内存以及网络问题，而大多数故障可能会包含不止一个层面的问题，所以进行排查时候尽量四个方面依次排查一遍。 同时例如 jstac</description></item><item><title>juc介绍</title><link>https://www.gzcx.net/java-juc.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/java-juc.html</guid><description>1、日常工作中的并发 今天的日程 jira待处理的任务两个 完成测试环境的发布，通知测试开始验证 钉钉联系客户了解问题发生的过程 迭代新功能开发 实际过程中我们怎么做？ 先在</description></item><item><title>jvm 知识点汇总</title><link>https://www.gzcx.net/Summary-of-jvm-knowledge-points.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/Summary-of-jvm-knowledge-points.html</guid><description>无论什么级别的Java从业者，JVM都是进阶时必须迈过的坎。不管是工作还是面试中，JVM都是必考题。如果不懂JVM的话，薪酬会非常吃亏（近70%的面试者挂在JV</description></item><item><title>JVM垃圾回收</title><link>https://www.gzcx.net/JVM-garbage-collection.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/JVM-garbage-collection.html</guid><description>点击关注公众号及时获取笔主最新更新文章，并可免费领取本文档配套的《Java面试突击》以及Java工程师必备学习资源。 JVM 垃圾回收 写在前面 本节常见面试题 本文导火索 1</description></item><item><title>maven 详解-史上最全的maven教程</title><link>https://www.gzcx.net/Detailed-maven---the-most-complete-maven-tutorial-in-history.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/Detailed-maven---the-most-complete-maven-tutorial-in-history.html</guid><description>1、常用maven仓库 http://mvnrepository.com/ http://search.maven.org/ https://repository.sonatype.org/ 2、生成项目 2.1、创建Maven的普通Java项目 mvn archetype:create -DgroupId=packageName -DartifactId=projectName 2.2、创建Maven的Web项目 mvn archetype:create -DgroupId=packageName -DartifactId=webappName -DarchetypeArtifactId=maven-archetype-webapp 2.3、反向生成 maven 项目的骨架</description></item><item><title>故障处理总纲</title><link>https://www.gzcx.net/Troubleshooting-outline.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/Troubleshooting-outline.html</guid><description>1、前言 没有完美的程序，是程序都有bug,都有容量限制。所以出现故障也在情理之中，那么面对突如其来的bug,我们该如何应对呢？这是一个值得思考的问题？ 2、核心原</description></item><item><title>故障处理系列-httpclient 3.x的bug引发的惨案</title><link>https://www.gzcx.net/Troubleshooting-series-tragedy-caused-by-the-bug-of-httpclient-3.x.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/Troubleshooting-series-tragedy-caused-by-the-bug-of-httpclient-3.x.html</guid><description>1、故障现象描述 调用链路是 A-&amp;gt;B-&amp;gt;C 目前出故障的是B服务。A是网关，C是底层服务 故障的现象是： A对外出现大量的504 B的线程数暴增 B的流量骤减，一段时间趋近于0 C的请求</description></item><item><title>故障处理系列-大文件引发OOM</title><link>https://www.gzcx.net/Troubleshooting-Series-Large-File-Causes-OOM.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/Troubleshooting-Series-Large-File-Causes-OOM.html</guid><description>1、场景还原 系统A是一个需要加载文件到内存中进行处理的系统 大量的大文件并发请求过来 收到大量的系统的内存告警 收到大量的5xx告警，同时从监控可以看到大量的full</description></item><item><title>故障处理系列-数据清洗堵塞mq</title><link>https://www.gzcx.net/Troubleshooting-Series-Data-Cleaning-and-Blocking-MQ.html</link><pubDate>Tue, 15 Mar 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/Troubleshooting-Series-Data-Cleaning-and-Blocking-MQ.html</guid><description>1、故障还原 系统负载迅速升高 大量mq的发送被限流，影响到了核心业务（有强依赖mq驱动的） 2、根因分析 上游的一个业务触发了系统的数据清洗 清理的数据比较多，清洗的逻</description></item><item><title>git log介绍</title><link>https://www.gzcx.net/log-about-git.html</link><pubDate>Tue, 22 Feb 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/log-about-git.html</guid><description>查看 1 $ git log 简化版日志 1 $ git log --pretty=oneline 查看前N条 1 git log -n 变更日志 -n 同上,不加则显示全部 1 git log --stat -n 查看提交修改 查看某次commit做了哪些修改 1 git show &amp;lt;commit-hash-id&amp;gt; 退出log状态 有时</description></item><item><title>git tag 介绍</title><link>https://www.gzcx.net/tag-about-git.html</link><pubDate>Tue, 22 Feb 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/tag-about-git.html</guid><description>标签 tag就是一个让人容易记住的有意义的名字，它跟某个commit绑在一起。 新建一个标签 1 $ git tag &amp;lt;tagname&amp;gt; 命令git tag &amp;lt;tagname&amp;gt;用于新建一个标签，默</description></item><item><title>git Version Control介绍</title><link>https://www.gzcx.net/version-control-git.html</link><pubDate>Tue, 22 Feb 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/version-control-git.html</guid><description>初始化一个Git仓库 1 $ git init 添加文件到Git仓库 1 2 $ git add &amp;lt;file&amp;gt; $ git commit -m &amp;#34;description&amp;#34; git add可以反复多次使用，添加多个文件，git commit可以一次提交很多文件，-m后面输</description></item><item><title>git 远程仓库介绍</title><link>https://www.gzcx.net/origin-about-git.html</link><pubDate>Tue, 22 Feb 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/origin-about-git.html</guid><description>创建SSH Key 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 $ ssh-keygen -t rsa -C &amp;#34;youremail@example.com&amp;#34; Generating public/private rsa key pair. # 生成密钥对 Enter file in which to save the key (/root/.ssh/id_rsa): # 保存路径 Enter passphrase (empty for no passphrase): # 密码，默认空 Enter same passphrase again: # 重复密</description></item><item><title>git其他知识介绍</title><link>https://www.gzcx.net/other-about-git.html</link><pubDate>Tue, 22 Feb 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/other-about-git.html</guid><description>常用忽略文件 https://github.com/seeways/MyIgnore 配置别名 1 git config --global alias.&amp;lt;name&amp;gt; &amp;lt;git-name&amp;gt; 建议熟悉git命令后使用 1 2 3 4 5 # 设置别名 git config --global alias.unstage &amp;#39;reset HEAD&amp;#39; # 使用别名撤掉修改,实际执行git reset HEAD test.py git unstage test.py 对长命令的别名尤其好用 git</description></item><item><title>git基础介绍</title><link>https://www.gzcx.net/base-about-git.html</link><pubDate>Tue, 22 Feb 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/base-about-git.html</guid><description>Git配置 1 2 $ git config --global user.name &amp;#34;Your Name&amp;#34; $ git config --global user.email &amp;#34;email@example.com&amp;#34; git config命令的--global参数，表明这台机器上的所有Git仓库都会使用这个配置，也可以对某个仓库指定不同的用户</description></item><item><title>git提交代码到github提示失败</title><link>https://www.gzcx.net/github-submit-fail.html</link><pubDate>Tue, 22 Feb 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/github-submit-fail.html</guid><description>1、报错信息 Connection reset by 20.205.243.166 port 22 fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists. 2、处理方案 尝试将host文件中添加 192.30.255.112 github.com git 185.31.16.184 github.global.ssl.fastly.net</description></item><item><title>git整体介绍</title><link>https://www.gzcx.net/something-about-git.html</link><pubDate>Tue, 22 Feb 2022 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/something-about-git.html</guid><description>版本控制 什么是版本控制 为什么要版本控制 本地版本控制系统 集中化的版本控制系统 分布式版本控制系统 认识 Git Git 简史 Git 与其他版本管理系统的主要区别 Git 的三种状态 Git 使用快速入门</description></item><item><title>git常用的操作</title><link>https://www.gzcx.net/common-git-operate.html</link><pubDate>Wed, 18 Dec 2019 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/common-git-operate.html</guid><description>git常用的操作语法介绍 1、回归合并代码的请求 git checkout . &amp;amp;&amp;amp; git clean -xdf 2、强制删除本地的代码分支 git branch -D branchName 3、检出代码到本地 git checkout -b 本地分支名 远程分支名</description></item><item><title>git本地未提交被丢弃的文件如何找回</title><link>https://www.gzcx.net/git-base.html</link><pubDate>Wed, 18 Dec 2019 21:55:00 +0800</pubDate><guid>https://www.gzcx.net/git-base.html</guid><description>1、问题背景 写了一天代码，下班的时候随手关闭sourceTree,然后在关闭之前顺手执行了丢弃操作。（以为是测试项目的代码，无需保留）。下一秒猛地意识到是今天的</description></item></channel></rss>